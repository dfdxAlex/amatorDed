<?php
    session_start();
    if (!isset($_SESSION['statusAD'])) $_SESSION['statusAD']=0;
    
    /**
     * подключить автозагрузчик классов
     */
    include_once "../src/autoloader.php";

    /**
     * Поставить header
     */
    new \src\lib\php\HeaderFacade();

    /**
     * Создается объект фасад для упрощения и оптимизации работы
     * с системой авторизации и регистрации.
     */
    $user = new src\lib\php\authorization\UserFacade();
    
    /**
     * метод проверяет существование пользователя в базе 
     * данных. Если пользователь там есть, значит регистра-
     * ционную форму можно удалить
     * Удаление происходит в другой части скрипта, здесь 
     * только меняется статус пользователя для того, чтобы
     * отобразить всё по новому, согласно статуса пользователя
     */
    $user->searchUser();

    /**
     * Данный метод фасада слушает систему в ожидании нажатия
     * кнопки входа на сайт. Если нажатие происходит, то создается
     * другой объект внутри фасада, который проверяет данный пользователя
     * по базе данных, если такой пользователь есть, то устанавливается
     * его статус так-же из базы данных
     */
    $user->signIn();

     /**
      * Отслежваем пост запрос с параметром $_POST['registration']
      * Если такой элемент есть в пост массиве, то значит, была 
      * нажата кнопка регистрации.
      * Данный класс обрабатывает это нажатие кнопки
      */
    $user->registration();

    

    /**
     * Класс наблюдает за запросами и если в запросе будет элемент
     * гет-массива  signout, то есть isset($_GET['signout'])
     * то сбросить признак статуса к нулю.
     * Так как класс воздействует на навбар меню, то он должен
     * отработать раньше чем навигационное меню.
     */
    $user->signOut();

    /**
    * создать объект navbar
    */
    class\nonBD\navBootstrap\NavBarFacade::createNavBar();

    /**
     * Если появился гет параметр registration, то поставить
     * форму регистрации
     */
    $user->createFormRegistration();

    /**
     * Объект проверяет содержимое адрессной строки браузера и если 
     * был запрос с параметром signin, объект ставит форму ввода
     * логина и пароля, для авторизации на сайте
     */
    $user->createFormLogin();

    
    /**
     * Класс, который публикует информацию пока только о патернах
     * Данный метод содержит в себе часть контента жёстко запрограммированную
     * и часть контента (в разработке), которая подтягивается из 
     * базы данных. В итоге объект хранит в себе все информацию,
     * касающуюся описания паттернов программирования.
     * Выводит данный объект информацию только в том случае, если
     * в гет запроссе есть нужная переменная. Информация об этой
     * переменной так-же хранится в объекте.
     * Если в гет запросе нет нужной переменной, то объект
     * ничего не выводит, то есть никак не мешает другим объектам
     * строить страницу.
     */
    src\lib\php\content\FacadeContentPattern::factoryContentPattern();



    /**
     * Поставить futter
     */
    new \src\lib\php\FutterDecorator();


